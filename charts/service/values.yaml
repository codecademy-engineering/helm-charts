# Default values for service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

strategy: {}

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

securityContext: {}
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1001

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Configure environment variables.
env: []
  # - name: FOO
  #   value: bar
  # - name: SECRET
  #   valueFrom:
  #     secretKeyRef:
  #       name: my-secret
  #       key: api-key
  #       optional: true

# Environment variables in key-value syntax
envKeyValue: {}
  # FOO: bar

autoscaling:
  enabled: false

keda:
  enabled: false

nodeSelector: {}

tolerations: []

hostAliases: []

affinity: {}

volumes: {}
persistentVolumeClaims: []

# Defaults to port 80 on service resources
# DO NOT CHANGE, unless you absolutely need to
service:
  enabled: true
  type: ClusterIP
  port: 80
  selectorLabelOverride: {}

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

serviceAccount:
  # Specifies whether a service account should be created
  enabled: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and enabled is true, a name is generated using the fullname template
  name: ""

datadog: {}
  # env: production
  # service: service_name
  # version: version

preReleaseJob:
  enabled: false
  image:
    repository: alpine
    tag: "3.15"
    pullPolicy: IfNotPresent
  command:
    - echo
    - "hello world"
  env: []
    # - name: FOO
    #   value: bar
  securityContext: {}
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1001
  backoffLimit: 0

initContainer:
  enabled: false

