apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rails.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "rails.name" . }}
    helm.sh/chart: {{ include "rails.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- with .Values.datadog }}
    {{- if and .service .env }}
    tags.datadoghq.com/env: {{ .env }}
    tags.datadoghq.com/service: {{ .service }}
    tags.datadoghq.com/version: {{ .version | quote }}
    {{- end }}
    {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "rails.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: {{ .Values.strategy.type }}
{{- if eq .Values.strategy.type "RollingUpdate" }}
    rollingUpdate:
{{- with .Values.strategy.rollingUpdate }}
{{ toYaml . | indent 6 }}
{{- end}}
{{- end}}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "rails.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- with .Values.datadog }}
        {{- if and .service .env }}
        tags.datadoghq.com/env: {{ .env }}
        tags.datadoghq.com/service: {{ .service }}
        tags.datadoghq.com/version: {{ .version | quote }}
        {{- end }}
        {{- end }}
    {{- with .Values.annotations }}
    annotations:
{{ toYaml . | indent 8 }}
    {{- end }}
    spec:
      {{- if .Values.serviceAccountName }}
      serviceAccountName: {{ .Values.serviceAccountName }}
      {{- end }}
{{- with .Values.image.pullSecrets }}
      imagePullSecrets:
{{ toYaml . | indent 8 }}
    {{- end }}
      {{- if .Values.initContainer.enabled }}
      initContainers:
        - name: {{ .Values.initContainer.name }}
          image: "{{ .Values.initContainer.image.repository }}:{{ .Values.initContainer.image.tag }}"
          imagePullPolicy: {{ .Values.initContainer.image.pullPolicy }}
          {{- with .Values.initContainer.volumeMounts }}
          volumeMounts:
{{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.initContainer.envSecret }}
          env:
{{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.initContainer.securityContext }}
          securityContext:
{{ toYaml . | nindent 12 }}
          {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.image.command }}
          command:
{{ toYaml .Values.image.command | indent 12 }}
          {{- end }}
          {{- if .Values.envFromSecret }}
          envFrom:
            - secretRef:
                name: {{ .Values.envFromSecret }}
          {{- end }}
          {{- if or .Values.envs .Values.envsSecrets .Values.envsTemplate }}
          env:
            {{- range $key, $value := .Values.envs }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $key, $value := .Values.envsSecrets }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  {{- toYaml $value | nindent 18 }}
            {{- end }}
            {{- with .Values.envsTemplate }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- with .Values.datadog }}
            {{- if and .service .env }}
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DD_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/env']
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/version']
            {{- end }}
            {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
            {{- with .Values.service.additionalPort }}
            - name: {{ .name }}
              containerPort: {{ .port }}
              protocol: TCP
            {{- end }}
          livenessProbe:
{{ toYaml .Values.livenessProbe | indent 12 }}
          readinessProbe:
{{ toYaml .Values.readinessProbe | indent 12 }}
          startupProbe:
{{ toYaml .Values.startupProbe | indent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.securityContext }}
          securityContext:
{{ toYaml . | indent 12 }}
          {{- end }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
{{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
